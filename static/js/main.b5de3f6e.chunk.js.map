{"version":3,"sources":["hooks/use-window-dimension.js","screens/Four/NavBar.jsx","assets/icons/Google.jsx","assets/icons/LinkedIn.jsx","assets/icons/Twitter.jsx","screens/Four/Hero.jsx","screens/Four/index.jsx","App.js","serviceWorker.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","NavBar","useState","open","setOpen","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","className","href","onClick","console","log","Google","viewBox","xmlns","d","LinkedIn","Twitter","Hero","index","next","dir","setIndex","active","setActive","images","src","useCallback","item","prevState","length","imageTransitions","useTransition","from","opacity","transform","enter","leave","config","molasses","map","key","props","div","onMouseEnter","onMouseLeave","style","backgroundImage","alt","HeroThree","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b5de3f6e.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { useState } from 'react';\n\nimport useWindowDimensions from '../../hooks/use-window-dimension';\n\nconst NavBar = () => {\n  const [open, setOpen] = useState(false);\n\n  const { width } = useWindowDimensions();\n\n  const toggleMenu = () => {\n    console.log('state', open);\n    if (width < 769) {\n      setOpen(!open);\n    }\n  };\n\n  return (\n    <div className='pos'>\n      <nav className='header'>\n        <div className='logo'>\n          <a href='#default'>Gravity</a>\n        </div>\n        <div className='left-nav'>\n          <div className='nav-list'>\n            <ul className='nav'>\n              <li className='nav-item'>\n                <a className='active' href='#default'>\n                  Home\n                </a>\n              </li>\n              <li className='nav-item'>\n                <a href='#default'>Contact</a>\n              </li>\n            </ul>\n          </div>\n          <div onClick={toggleMenu} className='hamburger'>\n            <div className={open ? 'hamburger-icon none' : 'hamburger-icon'}>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div className={open ? 'menubar' : 'no-menubar'}>\n        <ul className='menu-links'>\n          <li className='nav-item'>\n            <a className='active' href='#default'>\n              Home\n            </a>\n          </li>\n          <li className='nav-item'>\n            <a href='#default'>Contact</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst Google = () => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <g>\n        <path d='M18.8751 10.6027H12.1479C12.1479 11.3023 12.1479 12.7015 12.1436 13.4011H16.0418C15.8925 14.1007 15.3628 15.0802 14.6145 15.5734C14.6138 15.5727 14.6131 15.5776 14.6116 15.5769C13.6167 16.2338 12.3037 16.3829 11.3288 16.187C9.80069 15.8833 8.59134 14.7752 8.10032 13.3675C8.10317 13.3654 8.10532 13.3459 8.10746 13.3445C7.80012 12.4714 7.80012 11.3023 8.10746 10.6027H8.10675C8.50272 9.31683 9.74851 8.14359 11.2788 7.82247C12.5096 7.56152 13.8983 7.84416 14.9197 8.79982C15.0555 8.6669 16.7995 6.96405 16.9303 6.82553C13.4409 3.66541 7.85373 4.77708 5.7631 8.85789H5.76239C5.76239 8.85789 5.7631 8.85789 5.75882 8.86558C4.72458 10.87 4.76747 13.2318 5.76596 15.1404C5.7631 15.1425 5.76096 15.1438 5.75882 15.1459C6.66368 16.902 8.31045 18.2487 10.2946 18.7615C12.4024 19.3142 15.0848 18.9364 16.8817 17.3112C16.8824 17.3119 16.8831 17.3126 16.8838 17.3133C18.4062 15.9421 19.354 13.6061 18.8751 10.6027Z' />\n      </g>\n    </svg>\n  );\n};\n\nexport default Google;\n","import React from 'react';\n\nconst LinkedIn = () => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <g>\n        <path d='M20 19H16.9231V13.3967C16.9231 11.8596 16.2715 11.0022 15.1031 11.0022C13.8315 11.0022 13.0769 11.8956 13.0769 13.3967V19H10V8.59243H13.0769V9.76288C13.0769 9.76288 14.0423 8 16.2177 8C18.3938 8 20 9.3818 20 12.2415C20 15.1004 20 19 20 19ZM5.50031 6C4.67151 6 4 5.32819 4 4.4997C4 3.67181 4.67151 3 5.50031 3C6.32849 3 7 3.67181 7 4.4997C7.00061 5.32819 6.32849 6 5.50031 6ZM4 19H7V9H4V19Z' />\n      </g>\n    </svg>\n  );\n};\n\nexport default LinkedIn;\n","import React from 'react';\n\nconst Twitter = () => {\n  return (\n    <svg\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path d='M9.032 19C15.0696 19 18.372 13.6132 18.372 8.94228C18.372 8.78894 18.372 8.63646 18.3624 8.48484C19.0048 7.98518 19.5592 7.36492 20 6.65506C19.4016 6.94107 18.7656 7.12887 18.1152 7.21158C18.8 6.76964 19.3128 6.07529 19.5584 5.25603C18.9136 5.66781 18.2088 5.95813 17.4736 6.11406C16.2304 4.6909 14.1512 4.62198 12.8288 5.96071C11.9768 6.82391 11.6144 8.11096 11.8792 9.33856C9.24 9.19555 6.7808 7.85337 5.1136 5.64541C4.2424 7.26068 4.688 9.3265 6.1304 10.3637C5.608 10.3473 5.0968 10.1957 4.64 9.92178V9.96657C4.6408 11.649 5.7424 13.098 7.2736 13.4314C6.7904 13.5736 6.2832 13.5942 5.792 13.4917C6.2216 14.9321 7.4544 15.9185 8.8584 15.9469C7.696 16.9307 6.26 17.4649 4.7816 17.4631C4.5208 17.4623 4.26 17.4459 4 17.4123C5.5016 18.4495 7.248 19 9.032 18.9974' />\n    </svg>\n  );\n};\n\nexport default Twitter;\n","import React, { useState, useCallback } from 'react';\nimport { animated, useTransition, config } from 'react-spring';\n\nimport Google from '../../assets/icons/Google';\nimport LinkedIn from '../../assets/icons/LinkedIn';\nimport Twitter from '../../assets/icons/Twitter';\n\nconst Hero = () => {\n  const [[index, next, dir], setIndex] = useState([0, 1, 0]);\n  const [active, setActive] = useState(false);\n\n  const images = [\n    {\n      index: 1,\n      src: 'v1594228052/Placeholder_1_ye5ru5.png',\n    },\n    {\n      index: 2,\n      src: 'v1594425842/Placeholder_2_fl0psx.png',\n    },\n    {\n      index: 3,\n      src:\n        'v1594510804/joao-paulo-de-souza-oliveira-BBNPJnucqYQ-unsplash_d5ns7s.jpg',\n    },\n    {\n      index: 4,\n      src:\n        'v1594510806/honey-yanibel-minaya-cruz-YrYdmIVSE8Y-unsplash_vxwda9.jpg',\n    },\n    {\n      index: 5,\n      src: 'v1594510808/juli-kosolapova-h6e1QApgI38-unsplash_ggey3g.jpg',\n    },\n  ];\n\n  const onClick = useCallback(\n    item =>\n      setIndex(prevState => [\n        item.index - 1,\n        item.index % images.length,\n        item.index > prevState[0] ? 1 : -1,\n      ]),\n    [images.length]\n  );\n\n  const imageTransitions = useTransition(images[index], item => item.index, {\n    from: {\n      opacity: 0,\n      transform: `translateX(${dir === 1 ? 100 : -100}px)`,\n    },\n    enter: {\n      opacity: 1,\n      transform: 'translateX(0%)',\n    },\n    leave: {\n      opacity: 0,\n      transform: `translateX(${dir === 1 ? -100 : 100}px)`,\n    },\n    config: config.molasses,\n  });\n\n  return (\n    <main>\n      <div className='hero'>\n        <div className='hero-text'>\n          <p className='label'>Shooting Stars</p>\n          <h2 className='main'>Pictures in the Sky.</h2>\n          <p className='desc'>\n            Many people have the notion that enlightenment is one state. Many\n            also believe that when it is attained, a person is forever in that\n            state.\n          </p>\n          <div className='buttons'>\n            <button className='first'>Get Started</button>\n            <Twitter />\n            <LinkedIn />\n            <Google />\n          </div>\n        </div>\n        <div className='index'>\n          {images.map(item => (\n            <div\n              key={item.index}\n              onClick={() => onClick(item)}\n              className={\n                index === item.index - 1 ? 'numbers active' : 'numbers'\n              }\n            >\n              {item.index}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className='hero-image'>\n        <figure>\n          {imageTransitions.map(({ item, props, key }) => (\n            <animated.div\n              className='image'\n              key={key}\n              onMouseEnter={() => setActive(!active)}\n              onMouseLeave={() => setActive(!active)}\n              style={{\n                ...props,\n                backgroundImage: `url(https://res.cloudinary.com/favourcodes/image/upload/${item.src})`,\n              }}\n            />\n          ))}\n        </figure>\n\n        <div className={active ? 'preview' : 'next'}>\n          <img\n            className='next-image'\n            alt=''\n            src={`https://res.cloudinary.com/favourcodes/image/upload/${images[next].src}`}\n          />\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Hero;\n","import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport Hero from './Hero';\nimport './style.css';\n\nexport class HeroThree extends Component {\n  render() {\n    return (\n      <>\n        <NavBar />\n        <Hero />\n      </>\n    );\n  }\n}\n\nexport default HeroThree;\n","import React from 'react';\n// import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport './App.css';\n\n// import HeroOne from './screens/One';\n// import HeroTwo from './screens/Two';\n// import HeroThree from './screens/Three';\nimport HeroFour from './screens/Four';\n\nfunction App() {\n  return (\n    <div>\n      <HeroFour />\n    </div>\n    // <Router>\n    //   <div>\n    //     <ul>\n    //       <li>\n    //         <Link to='/one'>One</Link>\n    //       </li>\n    //       <li>\n    //         <Link to='/two'>Two</Link>\n    //       </li>\n    //       <li>\n    //         <Link to='/three'>Three</Link>\n    //       </li>\n    //     </ul>\n\n    //     <hr />\n    //     <Switch>\n    //       <Route exact path='/one'>\n    //         <HeroOne />\n    //       </Route>\n    //       <Route path='/two'>\n    //         <HeroTwo />\n    //       </Route>\n    //       <Route path='/three'>\n    //         <HeroThree />\n    //       </Route>\n    //     </Switch>\n    //   </div>\n    // </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}